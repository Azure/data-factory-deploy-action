name: data-factory-deploy
description: Deploy Azure Data Factory resources

inputs:
  resourceGroupName:
    description: 'Data Factory resource group name'
    required: true
  dataFactoryName:
    description: 'Data factory name'
    required: true
  armTemplateFile:
    description: 'ARM template file name'
    required: false
    default: 'ARMTemplateForFactory.json'
  armTemplateParametersFile:
    description: 'ARM template parameters file name'
    required: false
    default: 'ARMTemplateParametersForFactory.json'
  additionalParameters:
    description: 'Parameters which will be replaced in the ARM template'
    required: false
    default: ''
  skipAzModuleInstallation:
    description: 'Parameters which skip the Az module installation'
    required: false
    default: 'false'
  cleanupResources:
    description: 'Whether or not to run the cleanup step to remove deleted factory elements'
    required: false
    default: 'true'

runs:
  using: 'composite'
  steps:
    - name: Install Az PowerShell module
      run: if('${{ inputs.skipAzModuleInstallation }}' -ne 'true') { Install-Module -Name Az -Scope CurrentUser -Repository PSGallery -Force }
      shell: pwsh

    - name: Run Pre-deployment script
      run: |
        ${{ github.action_path }}/PrePostDeploymentScript.ps1 `
          -armTemplate "${{ inputs.armTemplateFile }}" `
          -ResourceGroupName "${{ inputs.resourceGroupName }}" `
          -DataFactoryName "${{ inputs.dataFactoryName }}" `
          -predeployment $true `
          -deleteDeployment $false
      shell: pwsh

    - name: Run ARM deploy
      uses: azure/arm-deploy@v1
      with:
        resourceGroupName: ${{ inputs.resourceGroupName }}
        template: ${{ inputs.armTemplateFile }}
        parameters: ${{ inputs.armTemplateParametersFile }} factoryName=${{ inputs.dataFactoryName }} ${{ inputs.additionalParameters }}
        
    - name: Run Post-deployment script
      run: |
        ${{ github.action_path }}/PrePostDeploymentScript.ps1 `
          -armTemplate "${{ inputs.armTemplateFile }}" `
          -ResourceGroupName "${{ inputs.resourceGroupName }}" `
          -DataFactoryName '${{ inputs.dataFactoryName }}' `
          -predeployment $false `
          -cleanupResources ('${{ inputs.cleanupResources }}' -eq 'true') `
          -deleteDeployment $true
      shell: pwsh
